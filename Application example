#include <iostream>
#include <vector>
using namespace std;

class Planet {
public:
    string name;
    string arrival_date;
    string departure_date;
    string arrival_time;
    string departure_time;
    string beautiful_things;

    Planet(string name, string arrival_date, string departure_date, string arrival_time, string departure_time, string beautiful_things)
        : name(name), arrival_date(arrival_date), departure_date(departure_date), arrival_time(arrival_time), departure_time(departure_time), beautiful_things(beautiful_things) {}
};

class Itinerary {
public:
    vector<Planet> planets;

    void add_planet(Planet planet) {
        planets.push_back(planet);
    }

    void show_planet(int index) {
        if (index >= 0 && index < planets.size()) {
            cout << "Planet " << index + 1 << ":\n";
            cout << "Name: " << planets[index].name << "\n";
            cout << "Arrival Date: " << planets[index].arrival_date << "\n";
            cout << "Departure Date: " << planets[index].departure_date << "\n";
            cout << "Arrival Time: " << planets[index].arrival_time << "\n";
            cout << "Departure Time: " << planets[index].departure_time << "\n";
            cout << "Beautiful Things: " << planets[index].beautiful_things << "\n\n";
        }
        else {
            cout << "Invalid index.\n";
        }
    }
};

// Example of usage
int main() {
    Itinerary itinerary;
    itinerary.add_planet(Planet("Mars", "10/10/2023", "15/10/2023", "5:00 AM", "5:04 AM", "The red planet, famous for its dust storms and Olympus Mons, the largest volcano in the solar system."));
    itinerary.add_planet(Planet("Jupiter", "16/10/2023", "20/10/2023", "5:00 AM", "6:30 AM", "The largest planet in the solar system, known for its Great Red Spot, a storm larger than Earth."));
    itinerary.add_planet(Planet("Jupiter Io", "16/10/2023", "20/10/2023", "6:30 AM", "8:30 AM", "Trip to the moon Io."));
    itinerary.add_planet(Planet("Jupiter Callisto", "16/10/2023", "20/10/2023", "6:30 AM", "8:30 AM", "Trip to Callisto."));
    int choice;
    char continue_option;
    vector<int> visited_planets;

    do {
        cout << "Please choose a planet to visit:\n1. Mars\n2. Jupiter\n3. Jupiter Io\n4. Jupiter Callisto\n";
        cin >> choice;

        if (choice >= 1 && choice <= 4) {
            itinerary.show_planet(choice - 1);
            visited_planets.push_back(choice - 1);
        }
        else {
            cout << "Invalid choice.\n";
        }

        cout << "Do you want to visit another planet? (y/n)\n";
        cin >> continue_option;

    } while (continue_option == 'y' || continue_option == 'Y');

    cout << "\nYou have visited the following planets:\n";
    for (int i = 0; i < visited_planets.size(); i++) {
        itinerary.show_planet(visited_planets[i]);
    }
}
